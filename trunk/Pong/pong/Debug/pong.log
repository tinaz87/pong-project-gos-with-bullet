  FiniteStateMachine.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(49): error C2678: '!=' binario: non è stato trovato alcun operatore che accetti un operando sinistro di tipo 'MvVector<T>'. È anche possibile che non vi siano conversioni accettabili.
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(425): potrebbe essere 'bool std::operator !=(const std::error_code &,const std::error_condition &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(432): o 'bool std::operator !=(const std::error_condition &,const std::error_code &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft sdks\windows\v7.0a\include\guiddef.h(197): o 'int operator !=(const GUID &,const GUID &)'
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(48): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::SetSubscriber(SubscriberImpl *)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\finitestatemachine.h(25): vedere il riferimento all'istanza del modello di classe 'SubscriberHelper<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(19): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::Subscribe(Publisher<SubscriberImpl> *)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: 'cast di tipo funzione'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: ')'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2143: errore di sintassi: ')' mancante prima di ';'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2182: 'RaiseEvent': utilizzo non valido del tipo 'void'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2365: 'Publisher<SubscriberImpl>::RaiseEvent': ridefinizione. La definizione precedente era 'funzione membro'
          with
          [
              SubscriberImpl=TransitionObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): vedere la dichiarazione di 'Publisher<SubscriberImpl>::RaiseEvent'
          with
          [
              SubscriberImpl=TransitionObserver *
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2998: 'int RaiseEvent': non può essere una definizione di modello
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.begin' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.end' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C3861: 'find': identificatore non trovato
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2227: l'elemento a sinistra di '->end' deve puntare a un tipo classe, struttura, unione o generico
  FSMState.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=TransitionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<TransitionObserver> *,AAllocator<SubscriberHelper<TransitionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(5): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::Publisher(size_t)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\fsmstate.h(24): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
  gameRulesComponent.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(49): error C2678: '!=' binario: non è stato trovato alcun operatore che accetti un operando sinistro di tipo 'MvVector<T>'. È anche possibile che non vi siano conversioni accettabili.
          with
          [
              T=Publisher<ScoreObserver> *
          ]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(425): potrebbe essere 'bool std::operator !=(const std::error_code &,const std::error_condition &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(432): o 'bool std::operator !=(const std::error_condition &,const std::error_code &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft sdks\windows\v7.0a\include\guiddef.h(197): o 'int operator !=(const GUID &,const GUID &)'
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<ScoreObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(48): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::SetSubscriber(SubscriberImpl *)'
          with
          [
              SubscriberImpl=ScoreObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\rules\include\gamerulescomponent.h(36): vedere il riferimento all'istanza del modello di classe 'SubscriberHelper<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=ScoreObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(19): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::Subscribe(Publisher<SubscriberImpl> *)'
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: 'cast di tipo funzione'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: ')'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2143: errore di sintassi: ')' mancante prima di ';'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2182: 'RaiseEvent': utilizzo non valido del tipo 'void'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2365: 'Publisher<SubscriberImpl>::RaiseEvent': ridefinizione. La definizione precedente era 'funzione membro'
          with
          [
              SubscriberImpl=ScoreObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): vedere la dichiarazione di 'Publisher<SubscriberImpl>::RaiseEvent'
          with
          [
              SubscriberImpl=ScoreObserver *
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2998: 'int RaiseEvent': non può essere una definizione di modello
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.begin' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.end' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C3861: 'find': identificatore non trovato
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2227: l'elemento a sinistra di '->end' deve puntare a un tipo classe, struttura, unione o generico
  StartState.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=TransitionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<TransitionObserver> *,AAllocator<SubscriberHelper<TransitionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(11): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::~Publisher(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\fsmstate.h(24): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=CollisionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<CollisionObserver> *,AAllocator<SubscriberHelper<CollisionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(11): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::~Publisher(void)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\physics\include\physicscomponent.h(55): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
  ScoreManager.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(49): error C2678: '!=' binario: non è stato trovato alcun operatore che accetti un operando sinistro di tipo 'MvVector<T>'. È anche possibile che non vi siano conversioni accettabili.
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(425): potrebbe essere 'bool std::operator !=(const std::error_code &,const std::error_condition &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(432): o 'bool std::operator !=(const std::error_condition &,const std::error_code &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft sdks\windows\v7.0a\include\guiddef.h(197): o 'int operator !=(const GUID &,const GUID &)'
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(48): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::SetSubscriber(SubscriberImpl *)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\rules\include\scoremanager.h(43): vedere il riferimento all'istanza del modello di classe 'SubscriberHelper<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=CollisionObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(19): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::Subscribe(Publisher<SubscriberImpl> *)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: 'cast di tipo funzione'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: ')'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2143: errore di sintassi: ')' mancante prima di ';'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2182: 'RaiseEvent': utilizzo non valido del tipo 'void'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2365: 'Publisher<SubscriberImpl>::RaiseEvent': ridefinizione. La definizione precedente era 'funzione membro'
          with
          [
              SubscriberImpl=CollisionObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): vedere la dichiarazione di 'Publisher<SubscriberImpl>::RaiseEvent'
          with
          [
              SubscriberImpl=CollisionObserver *
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2998: 'int RaiseEvent': non può essere una definizione di modello
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.begin' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.end' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C3861: 'find': identificatore non trovato
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2227: l'elemento a sinistra di '->end' deve puntare a un tipo classe, struttura, unione o generico
  PauseState.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=TransitionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<TransitionObserver> *,AAllocator<SubscriberHelper<TransitionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(11): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::~Publisher(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\fsmstate.h(24): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=CollisionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<CollisionObserver> *,AAllocator<SubscriberHelper<CollisionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(11): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::~Publisher(void)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\physics\include\physicscomponent.h(55): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
  GameState.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=TransitionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<TransitionObserver> *,AAllocator<SubscriberHelper<TransitionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(11): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::~Publisher(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\fsmstate.h(24): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
  EndState.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<TransitionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=TransitionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<TransitionObserver> *,AAllocator<SubscriberHelper<TransitionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(11): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::~Publisher(void)'
          with
          [
              SubscriberImpl=TransitionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\fsmstate.h(24): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=TransitionObserver
          ]
  pong.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\pong.cpp(205): error C2259: 'InterfaceComponent': impossibile creare un'istanza di classe astratta
          a causa dei seguenti membri:
          'void TransitionObserver::TransitionEvent(const TransitionObserverData &)': è astratta
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\transitionobserver.h(18): vedere la dichiarazione di 'TransitionObserver::TransitionEvent'
  physicsComponent.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(72): error C2679: '=' binario: non è stato trovato alcun operatore che accetti un operando destro di tipo 'int'. È anche possibile che non vi siano conversioni accettabili.
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\containers.h(11): potrebbe essere 'MvVector<T> &MvVector<T>::operator =(const MvVector<T> &)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<CollisionObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(71): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::UnsubscribedCallback(void)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(33): durante la compilazione della classe modello, funzione membro 'void Publisher<SubscriberImpl>::Unsubscribe(std::_Vector_iterator<_Myvec>)'
          with
          [
              SubscriberImpl=CollisionObserver,
              _Myvec=std::_Vector_val<SubscriberHelper<CollisionObserver> *,AAllocator<SubscriberHelper<CollisionObserver> *>>
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.inl(5): durante la compilazione della classe modello, funzione membro 'Publisher<SubscriberImpl>::Publisher(size_t)'
          with
          [
              SubscriberImpl=CollisionObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\physics\include\physicscomponent.h(55): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=CollisionObserver
          ]
  interfaceComponent.cpp
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(49): error C2678: '!=' binario: non è stato trovato alcun operatore che accetti un operando sinistro di tipo 'MvVector<T>'. È anche possibile che non vi siano conversioni accettabili.
          with
          [
              T=Publisher<ScoreObserver> *
          ]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(425): potrebbe essere 'bool std::operator !=(const std::error_code &,const std::error_condition &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft visual studio 10.0\vc\include\system_error(432): o 'bool std::operator !=(const std::error_condition &,const std::error_code &)' [trovato utilizzando una ricerca dipendente dall'argomento]
          c:\program files\microsoft sdks\windows\v7.0a\include\guiddef.h(197): o 'int operator !=(const GUID &,const GUID &)'
          durante la ricerca di corrispondenza con l'elenco di argomenti '(MvVector<T>, int)'
          with
          [
              T=Publisher<ScoreObserver> *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(48): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::SetSubscriber(SubscriberImpl *)'
          with
          [
              SubscriberImpl=ScoreObserver
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\graphics\include\interfacecomponent.h(34): vedere il riferimento all'istanza del modello di classe 'SubscriberHelper<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): vedere il riferimento all'istanza del modello di classe 'Publisher<SubscriberImpl>' in corso di compilazione
          with
          [
              SubscriberImpl=ScoreObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(19): durante la compilazione della classe modello, funzione membro 'void SubscriberHelper<SubscriberImpl>::Subscribe(Publisher<SubscriberImpl> *)'
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: 'cast di tipo funzione'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2059: errore di sintassi: ')'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): error C2143: errore di sintassi: ')' mancante prima di ';'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2825: 'SubscriberImpl': deve essere una classe o uno spazio dei nomi quando seguito da '::'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2645: nessun nome completo per un puntatore a membro. Trovato ':: *'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2182: 'RaiseEvent': utilizzo non valido del tipo 'void'
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2365: 'Publisher<SubscriberImpl>::RaiseEvent': ridefinizione. La definizione precedente era 'funzione membro'
          with
          [
              SubscriberImpl=ScoreObserver *
          ]
          c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(13): vedere la dichiarazione di 'Publisher<SubscriberImpl>::RaiseEvent'
          with
          [
              SubscriberImpl=ScoreObserver *
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\publisher.h(15): error C2998: 'int RaiseEvent': non può essere una definizione di modello
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.begin' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C2228: l'elemento a sinistra di '.end' deve avere una classe, struttura o unione
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(22): error C3861: 'find': identificatore non trovato
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2275: 'SubscriberHelper<SubscriberImpl>::PublisherIterator': tipo non valido come espressione
          with
          [
              SubscriberImpl=ScoreObserver
          ]
c:\users\probook\desktop\master\gameplay programming\pong progetto esame\pong\pong\utility\include\subscriber.inl(24): error C2227: l'elemento a sinistra di '->end' deve puntare a un tipo classe, struttura, unione o generico
  Generazione del codice in corso...
